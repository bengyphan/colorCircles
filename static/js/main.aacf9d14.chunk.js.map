{"version":3,"sources":["logo.svg","ColoredButtons.js","Circle.js","Circles.js","Coloredcircles.js","App.js","reportWebVitals.js","index.js"],"names":["ColoredButtons","addCircle","colorbtns","options","map","color","onClick","style","backgroundColor","Circle","circle","idx","changePosition","className","position","left","x","top","y","Circles","circles","colorcircles","c","i","Coloredcircles","useState","setCircles","getRandom","Math","random","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,0BCWAA,EATQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UACnBC,EAD4C,EAAdC,QACVC,KAAI,SAAAC,GAAK,OAClC,wBAAQC,QAAS,kBAAML,EAAUI,IAAQE,MAAO,CAAEC,gBAAiBH,GAAnE,SACEA,OAGH,OAAO,8BAAMH,KCYCO,G,MAjBA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,eAC9B,OACC,qBACCN,QAAS,kBAAMM,EAAeD,IAC9BE,UAAU,SACVN,MAAO,CACNC,gBAAiBE,EAAOL,MACxBS,SAAU,WACVC,KAAK,GAAD,OAAKL,EAAOM,EAAZ,MACJC,IAAI,GAAD,OAAKP,EAAOQ,EAAZ,OAPL,SAUEP,MCLWQ,EAPC,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASR,EAAqB,EAArBA,eACrBS,EAAeD,EAAQhB,KAAI,SAACkB,EAAGC,GAAJ,OAChC,cAAC,EAAD,CAAQX,eAAgBA,EAAgBF,OAAQY,EAAGX,IAAKY,GAAQA,MAEjE,OAAO,8BAAMF,KCgCCG,EAnCQ,WAAO,IAAD,EACEC,mBAAS,IADX,mBACrBL,EADqB,KACZM,EADY,KAEtBC,EAAY,WACjB,OAAuB,IAAhBC,KAAKC,UAqBb,OACC,sBAAKhB,UAAU,kBAAf,UACC,cAAC,EAAD,CACCZ,UAtBe,SAAAI,GACjBqB,GAAW,SAAAhB,GAAM,4BACbA,GADa,CAEhB,CACCL,QACAW,EAAGW,IACHT,EAAGS,UAGLG,QAAQC,IAAIX,IAcVjB,QAAS,CAAC,YAAa,iBAAkB,mBAE1C,cAAC,EAAD,CAASiB,QAASA,EAASR,eAdN,SAAAD,GACtBe,GAAW,SAAAN,GAAO,OACjBA,EAAQhB,KAAI,SAACM,EAAQa,GAAT,OACXA,IAAMZ,EAAN,2BAAiBD,GAAjB,IAAyBM,EAAGW,IAAaT,EAAGS,MAAgBjB,eCXjDsB,MARf,WACC,OACC,qBAAKnB,UAAU,MAAf,SACC,cAAC,EAAD,OCKYoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aacf9d14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst ColoredButtons = ({ addCircle, options }) => {\r\n\tconst colorbtns = options.map(color => (\r\n\t\t<button onClick={() => addCircle(color)} style={{ backgroundColor: color }}>\r\n\t\t\t{color}\r\n\t\t</button>\r\n\t));\r\n\treturn <div>{colorbtns}</div>;\r\n};\r\n\r\nexport default ColoredButtons;\r\n","import React from 'react';\r\nimport './Circle.css';\r\n\r\nconst Circle = ({ circle, idx, changePosition }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => changePosition(idx)}\r\n\t\t\tclassName=\"Circle\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: circle.color,\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tleft: `${circle.x}vw`,\r\n\t\t\t\ttop: `${circle.y}vh`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{idx}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport Circle from './Circle';\r\n\r\nconst Circles = ({ circles, changePosition }) => {\r\n\tconst colorcircles = circles.map((c, i) => (\r\n\t\t<Circle changePosition={changePosition} circle={c} idx={i} key={i} />\r\n\t));\r\n\treturn <div>{colorcircles}</div>;\r\n};\r\n\r\nexport default Circles;\r\n","import React, { useState } from 'react';\r\nimport ColoredButtons from './ColoredButtons';\r\nimport Circles from './Circles';\r\n\r\nconst Coloredcircles = () => {\r\n\tconst [circles, setCircles] = useState([]);\r\n\tconst getRandom = () => {\r\n\t\treturn Math.random() * 100;\r\n\t};\r\n\tconst addCircle = color => {\r\n\t\tsetCircles(circle => [\r\n\t\t\t...circle,\r\n\t\t\t{\r\n\t\t\t\tcolor,\r\n\t\t\t\tx: getRandom(),\r\n\t\t\t\ty: getRandom(),\r\n\t\t\t},\r\n\t\t]);\r\n\t\tconsole.log(circles);\r\n\t};\r\n\tconst changePosition = idx => {\r\n\t\tsetCircles(circles =>\r\n\t\t\tcircles.map((circle, i) =>\r\n\t\t\t\ti === idx ? { ...circle, x: getRandom(), y: getRandom() } : circle\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Colored-circles\">\r\n\t\t\t<ColoredButtons\r\n\t\t\t\taddCircle={addCircle}\r\n\t\t\t\toptions={['peachpuff', 'lightsteelblue', 'paleturquoise']}\r\n\t\t\t/>\r\n\t\t\t<Circles circles={circles} changePosition={changePosition} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Coloredcircles;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Coloredcircles from './Coloredcircles';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Coloredcircles />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}